# -*- coding: utf-8 -*-

from django.contrib.auth.models import User
from .models import UserProfile
from django.contrib.auth import authenticate, login
from django.contrib.auth import logout
from django.shortcuts import render, redirect
from django.core.mail import send_mail
from uuid import uuid4


def login_view(request):

    if request.method == "GET":
        return render(request, "login.html", {})

    elif request.method == "POST":
        email = request.POST.get('email', '')
        password = request.POST.get('password', '')

        usr = authenticate(username=email, password=password)
        if usr is not None:
            login(request, usr)
            return render(request, "index.html")
        else:
            return render(request, 'login.html', {'error': "email or password is incorrect."})

    else:
        return render(request, "/sec_vulnerability/login/")


def index(request):
    return render(request, 'index.html')


def logout_view(request):
    logout(request)
    return render(request, "/")


def reset_password(request):
    if request.method == "GET":
        return render(request, 'login_recoverpw.html')

    elif request.method == "POST":

        email = request.POST['email']
        try:
            usr = User.objects.get(email=email)
        except User.DoesNotExist:
            return render(request, "login_recoverpw.html", {'error': 'user does not exists'})

        token = uuid4()
        up = UserProfile.objects.filter(user=usr)[0]
        up.token = token
        up.save()

        # here is security vulnerability
        url = "http://%s/users/new_password?token=%s" % (request.get_host(), token)
        text_message = "click here to reset your password: " + url
        send_mail(
            'Reset Password',
            text_message,
            'from@example.com',
            ['to@example.com'],
        )
        return redirect(request, "/sec_vulnerability/login/")


def new_password(request):
    if request.method == "GET":
        token = request.GET.get('token', '')
        return render(request, "new_password.html", {'token': token})

    elif request.method == "POST":
        password = request.POST['password']
        token = request.POST['token']
        # check token and change password
        return redirect(request, "/sec_vulnerability/login/")


def register(request):
    if request.method == "GET":
        return render(request, "register.html")

    elif request.method == "POST":
        username = request.POST['email']
        password = request.POST['password']
        user = User.objects.create_user(username=username, email=username, password=password)

        usr_profile = UserProfile()
        usr_profile.user = user
        usr_profile.save()

        return render(request, "login.html")